This page will cover my knowledge surrounding Linux as a beginner and things I have learned from TryHackMe
----------------------------------------------------------------------------------------------------------
Given I had no experience within the OS, it was nice to see some silly commands such as:
Echo- repeats text given following the command
whoami- tells you your user (actually useful in pentesting)

Commands I commonly use, help navigate what can seem a daunting endless list of code.

| Command    |                                               |
|------------|-----------------------------------------------|
|    ls      | List files available in current directory     |
|    cd      | followed by directory will change your pwd    |
|    cat     | Reads file within the command box             |
|    pwd     | Tells you your "present working directory"    |
|    find    | Finds specific in your directory (find psd.md)|
|    wc      | Counts the number of files matching(wc psd.md)|
|    grep    | Searches file for given name (grep 123 psd.md)|
|    su      | Elevates all future commands as root          |

Shell Operators 
| Command    |                                               |
|------------|-----------------------------------------------|
|    &       | Runs operation as a background process        |
|    &&      | Makes a list of commands run                  |
|    >       | Directs your output (grep > output.txt)       |
|    >>      | Overwrites content of file (If already exist) |

The following section will follow common commands used in conjunction with others.

| Command argument|                                          |
|-----------------|------------------------------------------|-------------|
|    -a   | Used to signify all (ls -a : List all)                         |
| --help  | Used in almost any context (-h too) to list available commands |
|   -R    | Remove file used in context (file.txt -R)                      |

Next ill go over the final bits of what I was taught and some general utilities that are helpful in almost every scenario.

Text Editors: there is a few different text editors, one being nano; my personal favorite. The other being VIM.
Nano: accessed by typing (nano) and can also be followed by a the title of what you want to title the document.
Nano also has its own set of commands listed here :
^G Get Help    ^O Write Out   ^W Where Is    ^K Cut Text    ^J Justify     ^C Cur Pos     M-U Undo       M-A Mark Text
^X Exit        ^R Read File   ^\ Replace     ^U Paste Text  ^T To Spell    ^_ Go To Line  M-E Redo       M-6 Copy Text

One of the most useful tools being used in many instances during my time in school uses python3.
Sending files to and from OS is a hassle especially on a OS such as linux, unless using a http server.
Launching your VM/Linux OS and using command http.server (followed by a port # if you like),
then using another OS (besides windows) the command wget is used to retrive files given a url. 

Lets give an example
______________________________________________________________________________________________
| tryhackme@linux3:/webserver# python3 -m http.server
| Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
| ____________________________________________________________________________________________

(Other OS)
_______________________________________________________________________________________________
| tryhackme@linux4:/webserver# wget http://MACHINE_IP:8000/myfile
| 
| 2021-05-04 14:26:16  http://127.0.0.1:8000/file
| Connecting to http://127.0.0.1:8000... connected.
| HTTP request sent, awaiting response... 200 OK
| Length: 51095 (50K) [text]
| Saving to: ‘file’
|
| file                    100%[=================================================>]  49.90K  --.-KB/s    in 0.04s
|
| 2021-05-04 14:26:16 (1.31 MB/s) - ‘file’ saved [51095/51095]

_Remember_ : this is meant to be used within a SEPARATE OS

This next section will follow processes, something I didnt truly understand my first try through so
this will be good for me and you to cover.
|__Commands___________________________________________________________________________________________
|   ps    | List currently running processes
|  aux    | Used as a command argument to list processes also ran by other uses
|  top    | Gives real time stats about the processes running
|  kill   | As you imagine "kills" or stops a process 
|systemctl| Allows you to interact with certain system processes
| ctrl+z  | Backgrounds a process (also can use & as mentioned earlier)
|  fg     | Brings a backgrounded process to the "fore ground"

| systemctl |___________________________________________________________________________________________
|  start    | Forces a process to resume its normal process
|  stop     | Kills a process without taking the time to ensure its safely ended
|  kill     | Kills a process cleanly, with less risk of damaging associated files
|  enable   | Starts a process normally
|  disable  | Stops a process without killing it allowing you to resume the same process later

The rest of the section will lightly touch on some commonly used systme functions.

Cron (Processes and their scheduled run times)
When used in context of a command, the command (crontabs) will be used to interact with said processes)
|  Crontab  |____________________________________________________________________________________________
|   MIN     |  What minute to execute at
|   HOUR    |  What hour to execute at
|   DOM	    |  What day of the month to execute at
|   MON	    |  What month of the year to execute at
|   DOW	    |  What day of the week to execute at
|   CMD	    |  The actual command that will be executed.
|   -e      |  Crontab argumment to be used to edit given cronjobs (process)
|   -R      |  Displays when given cronjob will be processed 
|   *       |  When used with setting a cronjobs start time/date an (*) can be used to signal a "wildcard" which will run randomly

Finally, any process can be accessed via a directory and using the (ls) command can show given logs for when each process was ran.
These logs will give you insight into those jobs beinng accessed and errors within them.

Now that we've gone over many basics within linux, lets move onto windows just to touch on every OS 
we will use for future captures and further learning.

